{
  "custom": {},
  "params": {
    "params": {},
    "size": "medium"
  },
  "propConfig": {
    "params.params": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.size": {
      "paramDirection": "input"
    }
  },
  "props": {
    "defaultSize": {
      "height": 58,
      "width": 1280
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "HorizontalMenu"
        },
        "position": {
          "grow": 1,
          "shrink": 0
        },
        "propConfig": {
          "props.items[0].style.backgroundColor": {
            "binding": {
              "config": {
                "struct": {
                  "itemNum": 0,
                  "path": "{page.props.path}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\tpath \u003d value.path\n\titemNum \u003d value.itemNum\n\tcurrentItem \u003d self.props.items[itemNum].target\n\t\n\tif currentItem \u003d\u003d path:\n\t\treturn \"#0000AC\"\n\treturn \"\"",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          },
          "props.items[0].style.fontWeight": {
            "binding": {
              "config": {
                "path": "page.props.path"
              },
              "transforms": [
                {
                  "expression": "if ({value} \u003d {this.props.items[0].target}, \"bold\", \"normal\")",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          },
          "props.items[1].style.backgroundColor": {
            "binding": {
              "config": {
                "struct": {
                  "itemNum": 1,
                  "path": "{page.props.path}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\tpath \u003d value.path\n\titemNum \u003d value.itemNum\n\tcurrentItem \u003d self.props.items[itemNum].target\n\t\n\tif currentItem \u003d\u003d path:\n\t\treturn \"#0000AC\"\n\treturn \"\"",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          },
          "props.items[1].style.fontWeight": {
            "binding": {
              "config": {
                "path": "page.props.path"
              },
              "transforms": [
                {
                  "expression": "if ({value} \u003d {this.props.items[1].target}, \"bold\", \"normal\")",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          },
          "props.items[2].style.backgroundColor": {
            "binding": {
              "config": {
                "struct": {
                  "itemNum": 2,
                  "path": "{page.props.path}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\tpath \u003d value.path\n\titemNum \u003d value.itemNum\n\tcurrentItem \u003d self.props.items[itemNum].target\n\t\n\tif currentItem \u003d\u003d path:\n\t\treturn \"#0000AC\"\n\treturn \"\"",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          },
          "props.items[2].style.fontWeight": {
            "binding": {
              "config": {
                "path": "page.props.path"
              },
              "transforms": [
                {
                  "expression": "if ({value} \u003d {this.props.items[2].target}, \"bold\", \"normal\")",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          },
          "props.items[3].style.backgroundColor": {
            "binding": {
              "config": {
                "struct": {
                  "itemNum": 3,
                  "path": "{page.props.path}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\tpath \u003d value.path\n\titemNum \u003d value.itemNum\n\tcurrentItem \u003d self.props.items[itemNum].items\n\t\n\tfor idx in range(len(currentItem)):\n\t\tif currentItem[idx].target \u003d\u003d path:\n\t\t\treturn \"#0000AC\"\n\treturn \"\"",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          },
          "props.items[3].style.fontWeight": {
            "binding": {
              "config": {
                "struct": {
                  "itemNum": 3,
                  "path": "{page.props.path}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\tpath \u003d value.path\n\titemNum \u003d value.itemNum\n\tcurrentItem \u003d self.props.items[itemNum].items\n\t\n\tfor idx in range(len(currentItem)):\n\t\tif currentItem[idx].target \u003d\u003d path:\n\t\t\treturn \"bold\"\n\treturn \"normal\"",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          },
          "props.items[4].style.backgroundColor": {
            "binding": {
              "config": {
                "struct": {
                  "itemNum": "4",
                  "path": "{page.props.path}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\tpath \u003d value.path\n\titemNum \u003d value.itemNum\n\tcurrentItem \u003d self.props.items[itemNum].items\n\t\n\tfor idx in range(len(currentItem)):\n\t\tif currentItem[idx].target \u003d\u003d path:\n\t\t\treturn \"#0000AC\"\n\treturn \"\"",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          },
          "props.items[4].style.fontWeight": {
            "binding": {
              "config": {
                "struct": {
                  "itemNum": "4",
                  "path": "{page.props.path}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\tpath \u003d value.path\n\titemNum \u003d value.itemNum\n\tcurrentItem \u003d self.props.items[itemNum].items\n\t\n\tfor idx in range(len(currentItem)):\n\t\tif currentItem[idx].target \u003d\u003d path:\n\t\t\treturn \"bold\"\n\treturn \"normal\"",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          }
        },
        "props": {
          "itemStyle": {
            "classes": "Menu/Item_Horizontal"
          },
          "items": [
            {
              "enabled": true,
              "icon": {
                "path": "material/home"
              },
              "items": [],
              "label": "Home",
              "style": {
                "classes": ""
              },
              "target": "/"
            },
            {
              "enabled": true,
              "icon": {
                "path": "material/show_chart"
              },
              "items": [],
              "label": "Charts",
              "style": {
                "classes": ""
              },
              "target": "/charts"
            },
            {
              "enabled": true,
              "icon": {
                "path": "material/alarm"
              },
              "items": [],
              "label": "Alarms",
              "style": {
                "classes": ""
              },
              "target": "/alarms"
            },
            {
              "enabled": true,
              "icon": {
                "path": "material/perm_device_information"
              },
              "items": [
                {
                  "enabled": true,
                  "icon": {
                    "path": ""
                  },
                  "items": [],
                  "label": "Smoke Alarm",
                  "style": {
                    "backgroundColor": "#808080",
                    "classes": ""
                  },
                  "target": "/kidde/smokealarm"
                }
              ],
              "label": "Kidde",
              "style": {
                "classes": ""
              },
              "target": ""
            },
            {
              "enabled": true,
              "icon": {
                "path": "material/flight"
              },
              "items": [
                {
                  "enabled": true,
                  "icon": {
                    "path": ""
                  },
                  "items": [],
                  "label": "Current",
                  "style": {
                    "backgroundColor": "#808080",
                    "classes": ""
                  },
                  "target": "/opensky/current"
                },
                {
                  "enabled": true,
                  "icon": {
                    "path": ""
                  },
                  "items": [],
                  "label": "Historical",
                  "style": {
                    "backgroundColor": "#808080",
                    "classes": ""
                  },
                  "target": "/opensky/historical"
                }
              ],
              "label": "OpenSky",
              "style": {
                "classes": ""
              },
              "target": ""
            }
          ],
          "style": {
            "classes": "Menu/Menu_Horizontal"
          }
        },
        "type": "ia.navigation.horizontalmenu"
      },
      {
        "meta": {
          "hasDelegate": true,
          "name": "Filler"
        },
        "position": {
          "basis": "5px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "text": " "
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tif self.session.props.auth.authenticated:\n\t\tsystem.perspective.logout()\n\telse:\n\t\tsystem.perspective.login()"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "User"
        },
        "position": {
          "basis": "30px",
          "shrink": 0
        },
        "props": {
          "path": "material/person",
          "style": {
            "classes": "Header/Icon"
          }
        },
        "type": "ia.display.icon"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tif self.session.props.auth.authenticated:\n\t\tsystem.perspective.logout()\n\telse:\n\t\tsystem.perspective.login()"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "hasDelegate": true,
          "name": "Sign In"
        },
        "position": {
          "shrink": 0
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "session.props.auth.user.userName"
              },
              "transforms": [
                {
                  "expression": "if({value} \u003d null || len({value}) \u003d 0, \"Sign In\", {value})",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "cursor": "pointer",
            "marginLeft": "4px"
          }
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "props.style.backgroundColor": {
        "binding": {
          "config": {
            "path": "session.props.theme"
          },
          "transforms": [
            {
              "code": "\tif \"dark\" in value:\n\t\treturn \"var(--neutral-10)\"\n\telse:\n\t\treturn \"\"",
              "type": "script"
            }
          ],
          "type": "property"
        }
      }
    },
    "props": {
      "style": {
        "classes": "Header/Header"
      }
    },
    "type": "ia.container.flex"
  }
}