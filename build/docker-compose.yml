services:
  reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.3
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "8080:80"
      # The Web UI (enabled by --api.insecure=true)
      - "9080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  ignition:
    image: inductiveautomation/ignition:latest
    container_name: ignition_gateway
    ports:
      - "80:8088"  # HTTP Port
    volumes:
      - ./entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ../projects:/usr/local/bin/ignition/data/projects
      - ../db:/usr/local/bin/ignition/data/db
      - ../tags:/usr/local/bin/ignition/data/tags
      - ../leased-activation:/usr/local/bin/ignition/data/leased-activation
      - ../config/ignition.conf:/usr/local/bin/ignition/data/ignition.conf
    environment:
      - ACCEPT_IGNITION_EULA=Y
      - IGNITION_EDITION=maker
      - GATEWAY_MODULES_ENABLED=enterprise-administration,logix-driver,mitsubishi-driver,modbus-driver-v2,opc-ua,perspective,reporting,sql-bridge,symbol-factory,tag-historian,udp-tcp-drivers,web-browser,web-developer
    restart: unless-stopped
    labels:
      - "traefik.http.routers.ignition.rule=Host(`ignition.local`)"

  script-runner:
    image: alpine
    depends_on:
      ignition:
        condition: service_healthy
    volumes:
      - ./update_tags.sh:/update_tags.sh
    entrypoint: ["/bin/sh", "-c", "apk add --no-cache curl && /update_tags.sh"]
    restart: "no"